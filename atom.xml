<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Michael's Software Blog]]></title>
  <link href="http://michaeljcarey.github.io/atom.xml" rel="self"/>
  <link href="http://michaeljcarey.github.io/"/>
  <updated>2015-09-01T11:17:41-07:00</updated>
  <id>http://michaeljcarey.github.io/</id>
  <author>
    <name><![CDATA[Michael J Carey]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Make an RFduino Servo Controller]]></title>
    <link href="http://michaeljcarey.github.io/blog/2015/08/14/rfduinoServo/"/>
    <updated>2015-08-14T13:36:02-07:00</updated>
    <id>http://michaeljcarey.github.io/blog/2015/08/14/rfduinoServo</id>
    <content type="html"><![CDATA[<p>An RFduino is a tiny fingertip sized Arduino that features wireless Bluetooth.  An assortment of tiny stackable shields are made available so that you can make a number of cool projects. To learn how to set up an RFduino, see <a href="http://michaeljcarey.github.io/blog/2015/08/13/rfduinosetup/">Setup Your First RFduino</a>.</p>

<p>I have been wanting to make a simple servo controller project lately and I thought that this little package is the coolest thing because it is tiny, wireless and I can power it with a USB power pack which makes it completely self contained and it will be controlled wirelessly using an Iphone.</p>

<h3>What You Need</h3>

<p>This little project requires the basic wireless RFduino plus their USB and servo shields. The USB shield not only provides the most convenient way to apply power, but also provides a way to download sketches (programs) into the controller.  The Servo shield can control up to four servos.</p>

<p><a href="http://www.rfduino.com/product/rfd22102-rfduino-dip/index.html"><img src="http://www.rfduino.com/wp-content/uploads/2014/03/RFD22102.Prospective.Top_.png" width="250" height="250" title="RFduino RFD22102" ></a>
<a href="http://www.rfduino.com/product/rfd22121-usb-shield-for-rfduino/index.html"><img src="http://www.rfduino.com/wp-content/uploads/2014/03/RFD22121.Prospective.Top_.png" width="250" height="250" title="RFduino RFD22121" ></a>
<a href="http://www.rfduino.com/product/rfd22123-servo-shield-for-rfduino/index.html"><img src="http://www.rfduino.com/wp-content/uploads/2014/03/RFD22123.Prospective.Top_.png" width="250" height="250" title="RFduino RFD22102" ></a></p>

<p>I also need some servos to drive and I found a neat little <a href="https://www.adafruit.com/products/1967">Mini Pan-Tilt Kit</a> for under $20 from Adafruit.  You can use any servos that you wish in your project.  To power it all, I decided to use a USB Power Bank as a battery. I happened to find one that suits my need in Lumsing. I wanted to keep my cabling simple and off the shelf so I got a usb to barrel jack cable, and a <a href"http://www.adafruit.com/products/368>Female DC Power Adapter</a> which I also picked up from Adafruit.</p>

<p><img src="http://michaeljcarey.github.io/images/custom/rfduino/rfDuServoParts25.jpg" title="Parts for my RFduino Servo System" ></p>

<h3>Program the RFduino</h3>

<p>Connect the RFduino and USB shield together and plug into your computer.
<img src="http://michaeljcarey.github.io/images/custom/rfduino/rfDuSetup25.jpg" title="Programming the RFduino" >
Open the Arduino IDE.  Follow the <a href="">RFduino Setup</a> post if you don&rsquo;t know how to do this.  Open the sketch from File/Examples/RFduinoBLE/Servo in the IDE.
Which basically looks like this:</p>

<figure class='code'><figcaption><span>RFduino Servo Sketch</span><a href='https://michaeljcarey.github.io'>Source Article</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#include &lt;Servo.h&gt;</span>
</span><span class='line'><span class="c1">#include &lt;RFduinoBLE.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="no">Servo</span> <span class="n">s1</span><span class="p">;</span>
</span><span class='line'><span class="no">Servo</span> <span class="n">s2</span><span class="p">;</span>
</span><span class='line'><span class="no">Servo</span> <span class="n">s3</span><span class="p">;</span>
</span><span class='line'><span class="no">Servo</span> <span class="n">s4</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">void</span> <span class="n">setup</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">s1</span><span class="o">.</span><span class="n">attach</span><span class="p">(</span><span class="mi">2</span><span class="p">);</span>
</span><span class='line'>  <span class="n">s2</span><span class="o">.</span><span class="n">attach</span><span class="p">(</span><span class="mi">3</span><span class="p">);</span>
</span><span class='line'>  <span class="n">s3</span><span class="o">.</span><span class="n">attach</span><span class="p">(</span><span class="mi">4</span><span class="p">);</span>
</span><span class='line'>  <span class="n">s4</span><span class="o">.</span><span class="n">attach</span><span class="p">(</span><span class="mi">5</span><span class="p">);</span>
</span><span class='line'>  <span class="no">RFduinoBLE</span><span class="o">.</span><span class="n">advertisementInterval</span> <span class="o">=</span> <span class="mi">675</span><span class="p">;</span>
</span><span class='line'>  <span class="no">RFduinoBLE</span><span class="o">.</span><span class="n">advertisementData</span> <span class="o">=</span> <span class="s2">&quot;-servo&quot;</span><span class="p">;</span>
</span><span class='line'>  <span class="no">RFduinoBLE</span><span class="o">.</span><span class="n">begin</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">void</span> <span class="kp">loop</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="sr">//</span> <span class="no">RFduino_ULPDelay</span><span class="p">(</span><span class="no">INFINITE</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">void</span> <span class="no">RFduinoBLE_onReceive</span><span class="p">(</span><span class="n">char</span> <span class="o">*</span><span class="n">data</span><span class="p">,</span> <span class="n">int</span> <span class="n">len</span><span class="p">){</span>
</span><span class='line'>  <span class="n">int</span> <span class="n">servo</span> <span class="o">=</span> <span class="n">data</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span><span class="p">;</span>
</span><span class='line'>  <span class="n">int</span> <span class="n">degree</span> <span class="o">=</span> <span class="n">data</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="n">bitRead</span><span class="p">(</span><span class="n">servo</span><span class="p">,</span> <span class="mi">1</span><span class="p">))</span>
</span><span class='line'>    <span class="n">s1</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">degree</span><span class="p">);</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="n">bitRead</span><span class="p">(</span><span class="n">servo</span><span class="p">,</span> <span class="mi">2</span><span class="p">))</span>
</span><span class='line'>    <span class="n">s2</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">degree</span><span class="p">);</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="n">bitRead</span><span class="p">(</span><span class="n">servo</span><span class="p">,</span> <span class="mi">3</span><span class="p">))</span>
</span><span class='line'>    <span class="n">s3</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">degree</span><span class="p">);</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="n">bitRead</span><span class="p">(</span><span class="n">servo</span><span class="p">,</span> <span class="mi">4</span><span class="p">))</span>
</span><span class='line'>    <span class="n">s4</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">degree</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>And download the the servo sketch into the Arduino.</p>

<h3>Some Assembly Required</h3>

<p>Strip two small pieces of wire and connect the +v(s) and gnds on the terminal blocks of the servo shield to the ones on the DC Power Adapter.</p>

<p><img src="http://michaeljcarey.github.io/images/custom/rfduino/rfDuServoConn25.jpg" title="The Servo Shield and DC Connector" ></p>

<p>Connect the Servo Wires to the RFduino Servo Shield and then connect the Servo Shield to the RFduino.</p>

<ul>
<li> Brown is Gnd</li>
<li> Red is +5v</li>
<li> Orange is Signal</li>
</ul>


<p><img src="http://michaeljcarey.github.io/images/custom/rfduino/rfDuAssy25.jpg" title="Connect the Servos" ></p>

<h3>Connect Power</h3>

<p>Plug both the RFduino and Servo Shield power to the Power Bank.</p>

<p><img src="http://michaeljcarey.github.io/images/custom/rfduino/rfDuServoComp25.jpg" title="Connections for My RFduino Servo System" ></p>

<h3>Get the Iphone App</h3>

<p>Go to the App Store on your Iphone and search for RFduino.
Find the Servo app and install it.
Once installed, turn on the Power Bank, then open the Iphone Servo App. The app should discover the RFduino and display it in the app. Click on the found RFduino and it should open a control panel.</p>

<p><img src="http://michaeljcarey.github.io/images/custom/rfduino/rfDuFound2.png" width="350" title="System" >
<img src="http://michaeljcarey.github.io/images/custom/rfduino/rfDuServoApp.png" width="350" title="System" ></p>

<p>You should be able to select servo channels and then move the slider and your new Servo System should respond.</p>

<p>My servo system is acting a little sick as you can see from the YouTube video.  What is going on?</p>

<div class="ratio-4-3 embed-video-container" onclick="var myAnchor = document.getElementById('Z4ERE7K_RbI');var tmpDiv = document.createElement('div');tmpDiv.innerHTML = '&lt;iframe style=&quot;vertical-align:top;width:100%;height:100%;position:absolute;&quot; src=&quot;http://www.youtube.com/embed/Z4ERE7K_RbI?autoplay=1&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;';myAnchor.parentNode.replaceChild(tmpDiv.firstChild, myAnchor);return false;" title="click here to play">
<a class="youtube-lazy-link" style="width:100%;height:100%;background:#000 url(http://i2.ytimg.com/vi/Z4ERE7K_RbI/0.jpg) center center no-repeat;background-size:contain;position:absolute" href="http://www.youtube.com/watch?v=Z4ERE7K_RbI" id="Z4ERE7K_RbI" onclick="return false;">
<div class="youtube-lazy-link-div"></div>
<div class="youtube-lazy-link-info">RFduino Servo System is Spastic</div>
</a>
<div class="video-info" >An RFduino Servo System acting a little spastic.
https://michaeljcarey.github.io</div>
</div>


<p><br/>
Ok, after a bit of digging around, I discovered that although the RFduino BLE and the Servo shield both work well by themselves, they do not work well together.  You see, PWM waveforms are generated by two counters.  One for pulse width and the other for pulse frequency.  In this implementation, the counters used are not actually on the servo shield but internal to the RFduino itself.  You can see from the RFduino Servo Shield Schematic that there are no counters or PWM generator but only a quad amplifier.</p>

<iframe src="http://docs.google.com/gview?url=http://www.rfduino.com/wp-content/uploads/2014/03/rfd22123_r403_b001_sch.pdf&embedded=true" 
style="width:800px; height:550px;" frameborder="0"></iframe>


<p>When the BLE is used, the interrupts somehow corrupt the counters intended for the PWM signal which causes a great deal of unacceptable jitter.  This is something the RFduino folks should fix, but in lieu of that happening, the best solution is to get a third party servo shield with its own PWM generator i.e. its own counters.  In that way, the controller would only need to write two registers (width, period) per servo.  Adafruit provides such a board which I have and will soon implement, but its out of scope for this post.</p>

<p>*Note:  Another possible solution is to use the RFduino and servo shield without the BLE, but then I would lose my wireless capability, which is my sole reason for using the RFduino.</p>

<h3>Conclusion</h3>

<p>This post shows you how to connect an Iphone to and RFduino and servo shield.  I love how this project is so self contained.  You can easily imagine how the parts can easily fit into a robotic system which is not tethered to any stationary devices for power or control.  Although this project proved to be flawed, if an improved servo shield was used, the project would be quite successful.  Maybe I will do this and update this writeup in the future, but for now&hellip;
On to my next robot project.</p>

<p>Do cool things.</p>

<p><meta itemprop="name" content="Make an RFduino Servo Controller" />
<meta itemprop="image" content="https://michaeljcarey.github.io/images/custom/rfduino/rfDuSetup25.jpg" />
<meta itemprop="description" content="I have been wanting to make a simple servo controller project lately and I thought that this little package is the coolest thing." /></p>

<p><meta name="description" content="I have been wanting to make a simple servo controller project lately and I thought that this little package is the coolest thing" />
<meta name="author" content="Michael J Carey" /></p>

<!-- 
<meta property="article:author" content="[ GOOGLE+ AUTHOR URL ]" />

-->


<p><meta property="article:published_time" content="2015-08-14 13:36:02 -0700" />
<meta property="article:section" content="Arduino" /></p>

<p><meta property="og:title" content="Make an RFduino Servo Controller" />
<meta property="og:type" content="article" />
<meta property="og:description" content="I have been wanting to make a simple servo controller project lately and I thought that this little package is the coolest thing" />
<meta property="og:image" content="https://michaeljcarey.github.io/images/custom/rfduino/rfDuSetup25.jpg" />
<meta property="og:url" content="https://michaeljcarey.github.io/blog/2015/08/14/rfduinoServo/" />
<meta property="og:site_name" content="michaeljcarey.github.io" /></p>

<p><meta name="twitter:card" content="summary">
<meta name="twitter:title" content="Make an RFduino Servo Controller">
<meta name="twitter:description" content="I have been wanting to make a simple servo controller project lately and I thought that this little package is the coolest thing">
<meta name="twitter:image" content="https://michaeljcarey.github.io/images/custom/rfduino/rfDuSetup25.jpg">
<meta name="twitter:url" content="https://michaeljcarey.github.io/blog/2015/08/14/rfduinoServo/"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setup Your first RFduino]]></title>
    <link href="http://michaeljcarey.github.io/blog/2015/08/13/rfduinosetup/"/>
    <updated>2015-08-13T13:36:02-07:00</updated>
    <id>http://michaeljcarey.github.io/blog/2015/08/13/rfduinosetup</id>
    <content type="html"><![CDATA[<p>An RFduino is a tiny fingertip sized Arduino that features wireless Bluetooth.  They also make available a small assortment of tiny stackable shields including USB, battery, buttons, relays and servo shields so that you can make a number of cool projects.  The website provides documentation and apps for demonstration, but I thought I could show you how I set up my projects in one concise document.</p>

<!-- more -->


<p>For starters, I purchased the standard RFduino RFD22102 with wireless Bluetooth . But in order to download any sketches into this Arduino, I also needed the RFD22121 USB Shield.  This shield is also an easy way to provide power to the RFduino as I can power everything through a USB charger or power pack.</p>

<p><a href="http://www.rfduino.com/product/rfd22102-rfduino-dip/index.html"><img src="http://www.rfduino.com/wp-content/uploads/2014/03/RFD22102.Prospective.Top_.png" width="350" height="350" title="RFduino RFD22102" ></a>
<a href="http://www.rfduino.com/product/rfd22121-usb-shield-for-rfduino/index.html"><img src="http://www.rfduino.com/wp-content/uploads/2014/03/RFD22121.Prospective.Top_.png" width="350" height="350" title="RFduino RFD22121" ></a></p>

<p>For my development system, I ventured over to the <a href="https://www.arduino.cc/">Arduino site</a> and downloaded the <a href="https://www.arduino.cc/en/Main/Software">IDE</a>.  In my case, I am using Ubuntu but they have IDE&rsquo;s for Windows and OS X.  I simply followed the instructions for Ubuntu which was basically;</p>

<figure class='code'><figcaption><span>from Linux console</span><a href='https://michaeljcarey.github.io'>Source Article</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">update</span> <span class="o">&amp;&amp;</span> <span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">install</span> <span class="n">arduino</span> <span class="n">arduino</span><span class="o">-</span><span class="n">core</span>
</span></code></pre></td></tr></table></div></figure>


<p>In my case, it is installed in /opt/arduino-1.6.3/ folder but I linked the Arduino binary to my desktop.  Because it is a binary executable that I click from my desktop, I must tell my OS that I wish to run and not edit or view it.  I can do this by right clicking on the Arduino icon and selecting properties.  Under the permissions tab, I selected the check box for &lsquo;Allow executing file as program&rsquo;.</p>

<p><img src="http://michaeljcarey.github.io/images/custom/rfduino/ardProp.png" width="550" height="450" title="Enable Executable to Run" ></p>

<p>The Arduino software does not natively recognize the RFduino so there are some steps to download the RFduino code.  The RFduino site documents the <a href="https://github.com/RFduino/RFduino/blob/master/README.md">installation procedure</a> so after you install the Arduino software, go to File/Preferences and add <a href="http://rfduino.com/package_rfduino_index.json">http://rfduino.com/package_rfduino_index.json</a> to Additional Board Manager URLs and save.</p>

<p>Now open Tools/Board/Board Manager, and select RFduino at the end of the list and click install.
After that, select the RFduino will will now appear in the Tools/Board menu
Now go to Tools/Port and configure that.  On my Linux machine, it appears as: /dev/ttyUSB0.</p>

<p>You may also need a <a href="http://www.ftdichip.com/Drivers/VCP.htm">Virtual COM Port Driver</a>.</p>

<p>Finally, for Linux, enter:</p>

<figure class='code'><figcaption><span>from Linux console</span><a href='https://michaeljcarey.github.io'>Source Article</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">install</span> <span class="n">default</span><span class="o">-</span><span class="n">jre</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure>


<p>With that installed, connect the USB shield to the RFduino and insert it into the computer.
<img src="http://michaeljcarey.github.io/images/custom/rfduino/rfDuSetup25.jpg" title="Downloading to RFduino" ></p>

<p>Navigate to File/Examples/RFduinoBLE and select the Temperature example sketch.  Then File/Upload to compile, upload and begin execution.</p>

<p>From an Iphone, go to the Apple App Store and search for RFduino Temperature and install it.</p>

<p>Now open the Iphone Temperature app and it should automatically find the RFduino.  Click on the RFduino Text and the temperature should be displayed.</p>

<p><img class="left" src="http://michaeljcarey.github.io/images/custom/rfduino/rfDuFound.png" width="350" height="350" title="RFduino Devices Fount" >
<img class="right" src="http://michaeljcarey.github.io/images/custom/rfduino/rfDuTemp.png" width="350" height="350" title="RFduino Temperature Screen" ></p>

<h3>Summary</h3>

<p>This is just the simplest project.  Now that you have seen the basics of programming with the Arduino IDE and RFduino, go out and create all kinds of interesting projects.  Do cool things.</p>

<p><meta itemprop="name" content="Setup Your first RFduino" />
<meta itemprop="image" content="https://michaeljcarey.github.io/images/custom/rfduino/rfDuSetup25.jpg" />
<meta itemprop="description" content="An RFDuino is a tiny fingertip sized Arduino that features wireless bluetooth.  Learn how to create your first project with this device." /></p>

<p><meta name="description" content="An RFDuino is a tiny fingertip sized Arduino that features wireless bluetooth.  Learn how to create your first project with this device." />
<meta name="author" content="Michael J Carey" /></p>

<!-- 
<meta property="article:author" content="[ GOOGLE+ AUTHOR URL ]" />
-->


<p><meta property="article:published_time" content="2015-08-14 13:36:02 -0700" />
<meta property="article:section" content="Arduino" /></p>

<p><meta property="og:title" content="Setup Your first RFduino" />
<meta property="og:type" content="article" />
<meta property="og:description" content="An RFDuino is a tiny fingertip sized Arduino that features wireless bluetooth.  Learn how to create your first project with this device." />
<meta property="og:image" content="https://michaeljcarey.github.io/images/custom/rfduino/rfDuSetup25.jpg" />
<meta property="og:url" content="https://michaeljcarey.github.io/blog/2015/08/14/rfduinoServo/" />
<meta property="og:site_name" content="michaeljcarey.github.io" /></p>

<p><meta name="twitter:card" content="summary">
<meta name="twitter:title" content="Setup Your first RFduino">
<meta name="twitter:description" content="An RFDuino is a tiny fingertip sized Arduino that features wireless bluetooth.  Learn how to create your first project with this device.">
<meta name="twitter:image" content="https://michaeljcarey.github.io/images/custom/rfduino/rfDuSetup25.jpg">
<meta name="twitter:url" content="https://michaeljcarey.github.io/blog/2015/08/14/rfduinoServo/"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Blogging Basics III, Make Your Octopress Blog Active with Comments, Analytics and Product Links]]></title>
    <link href="http://michaeljcarey.github.io/blog/2015/08/12/blogbasics3/"/>
    <updated>2015-08-12T11:25:22-07:00</updated>
    <id>http://michaeljcarey.github.io/blog/2015/08/12/blogbasics3</id>
    <content type="html"><![CDATA[<p>Welcome to Part 3 of &lsquo;Blogging Basics - Make Your Octopress Blog Site Active with Comments, Analytics and Monetization&rsquo;.  How do you know what others are thinking about your blog, how many people visit your site and what are they doing when they are there?  If you can gain this kind of insight, you can tune your blog for more interest and you can even add advertising links to monetize your site.  This post can get you started on your way to more hits and popularity.</p>

<!-- more -->


<h2>Add Comments with Disqus</h2>

<p>Despite Octopress being a static site, comments can be added to your posts via Disqus.  Disqus is already set up for you. All you need to do is create a Disqus account and register for a new forum.  <a href="https://help.disqus.com/customer/portal/articles/931017-registering-a-new-forum">https://help.disqus.com/customer/portal/articles/931017-registering-a-new-forum</a></p>

<p>The only thing left to do is to set the properties in _config.yml.</p>

<figure class='code'><figcaption><span>_config.yml</span><a href='https://michaeljcarey.github.io'>Source Article</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">disqus_show_comment_count</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">true</span>
</span><span class='line'><span class="l-Scalar-Plain">disqus_short_name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">YOUR_DISQUS_ACCOUNT</span>
</span></code></pre></td></tr></table></div></figure>


<p>And then make sure that your blog entries have the comments: true option on top.</p>

<h2>Add Google Analytics for Tracking and Monitization</h2>

<p>Google Analytics can track how many people go to your site as well as other things like how long they spend on your site and where they are from.  To utilize this feature, go to the Google Analyitics web site, create an account and get your account id.
If you navigate to Admin/Tracking Info/Tracking Code then you will see your tracking code snip.
Google Analytics instructs you to place their code snippet in all of your html files.  But it looks like Octopress has already provided a mechanism for this.  In <em>includes/ there is a google_analytics.html file and if you include that file in </em>includes/after_footer.html then it will pick up the google_analytics_tracking_id in the _config.yml.</p>

<figure class='code'><figcaption><span>Add to bottom of _includes/after_footer.html</span><a href='https://michaeljcarey.github.io'>Source Article</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="p-Indicator">{</span><span class="err">%</span> <span class="nv">include google_analytics.html %</span><span class="p-Indicator">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>I have seen other Octopress bloggers take the script that Google Analytics provides and copy it into the _includes/google_analytics.html file, but I dont think that is necessary.</p>

<p>Other <a href="http://stefanalfbo.github.io/blog/2013/04/17/octopress-google-analytics-github-pages/">Octopress bloggers</a> recommend adding an additional line into _includes/google_analytics.html like this:</p>

<figure class='code'><figcaption><span>_includes/google_analytics.html</span><a href='https://michaeljcarey.github.io'>Source Article</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">_gaq.push([&#39;_setAccount&#39;, &#39;UA-66060669-1&#39;]);</span>
</span><span class='line'><span class="l-Scalar-Plain">_gaq.push([&#39;_setDomainName&#39;,&#39;github.io&#39;]);</span>
</span><span class='line'><span class="l-Scalar-Plain">_gaq.push([&#39;_trackPageview&#39;]);</span>
</span></code></pre></td></tr></table></div></figure>


<p>When you follow these instructions, then you are able to log onto Google Analytics and view all the information about page hits.  Spend some time looking through and learning all that google offers.</p>

<h2>Display Page Hit Counters on Your Blog</h2>

<p>If you want to display page hits on your blog and pages, then you will need to add XXX to your Octopress pages which will instruct Octopress to go to google analytics and retrieve the hit counts for dislplay.</p>

<p>I dont yet have this display of code hits working quite yet.  But I do see a couple of different ways to do this. I have not used StatCounter, but maybe it works well.</p>

<p>XXXFor others to see also, you can use a third-party API that uses JavaScript. The third-party service tracks pageviews for you and then provides you with a JavaScript snippet that you paste your sidebar or where ever you want the pageviews to show up. StatCounter is an example (didn&rsquo;t verify if it is a good service or not).</p>

<p>There are two other plugins that Octopress provides; jekyll-ga and octopress-page-view.</p>

<p>I am trying page-view over jekyll-ga because I dont see in the jekyll writeup how to display the analytics while page-view does show an example.</p>

<p>I am not sure how  to deal with the google analytics error &lsquo;missing tracking code&rsquo;.  I am currently trying to get the verification for the missing tracking code.  This verification is pending&hellip;  more to follow.  Ok, I finally got this resolved.  But I still do not see my hit counters incrementing.</p>

<h2>Add Google&rsquo;s AdSense to Octopress</h2>

<p>Create an AdSense Account.  Go to the Adsense signup page  <a href="https://www.google.com/adsense/signup">https://www.google.com/adsense/signup</a> and fill out the form.  Once that is done, you will have to wait for an initial approval.  Once you get that, then log on and create an AdUnit.
Name the AdUnit and select what kind of AdUnit you wish.  Then copy the generated script for pasting into your website.</p>

<p>I elected to place a leaderboard ad just above my blog comment section.  To do this, open source/_layouts/post.html and paste the previously copied script just above the &lt;h1>Comments&lt;/h1> section".</p>

<p>Now after generating and previewing your page, you should see a blank gap just above the comments.  This is due to a wait period for google to review and approve your site for ads.</p>

<p>Next, you will want to link your AdSense account to your Google Analytics site.  I was able to click the &lsquo;link&rsquo; action in the AdSense/Google Analytics Integration page which took me to the Google Analytics site where I was able to finish connecting the link.  Now Google Analytics shows that I have linked my Adsense account.</p>

<p>I still have not entered any bank account information so that Google could actually pay me, but I also need to get more traffic for that to happen.</p>

<p>More to come.</p>

<p>gem list &ndash;local</p>

<h2>Add Webmaster Tools</h2>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Blogging Basics II, How to Configure and Edit Your Blog Site in Octopress]]></title>
    <link href="http://michaeljcarey.github.io/blog/2015/08/06/startingmyblog2howtowriteapost/"/>
    <updated>2015-08-06T18:08:29-07:00</updated>
    <id>http://michaeljcarey.github.io/blog/2015/08/06/startingmyblog2howtowriteapost</id>
    <content type="html"><![CDATA[<p>Welcome to Part 2 of &lsquo;Blogging Basics - How to Configure and Edit Your Blog Site in Octopress&rsquo;.  Now that we have successfully set up a Basic Octopress Blog site and written our first posts, we are ready to tune up the Blog site and add more functionality.</p>

<!-- more -->


<h2>Configuring Octopress</h2>

<p>When you first start with Octopress, you get a pretty basic layout.<br/>
<img src="http://michaeljcarey.github.io/images/custom/Selection_002.png" width="890" height="280"></p>

<p>How do you change the boarder?  How to you add to the Menu Bar and the right column where &lsquo;Recent Posts&rsquo; resides?
What are Templates and Themes and how are they and rss feeds used?
I found that and more on at Octopress' docs &ldquo;Configuring Octopress&rdquo; <a href="http://http://octopress.org/docs/configuring/">http://http://octopress.org/docs/configuring/</a> to be quite informative.  I followed that doc and others to get my blog to look professional.</p>

<p>These are some of the cool things I learned:</p>

<h2>Change the banner</h2>

<p>In _config.yml, edit here to change title, author &amp;c.x</p>

<figure class='code'><figcaption><span>_config.yml</span><a href='https://michaeljcarey.github.io'>Source Article</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># ----------------------- #</span>
</span><span class='line'><span class="c1">#      Main Configs       #</span>
</span><span class='line'><span class="c1"># ----------------------- #</span>
</span><span class='line'>
</span><span class='line'><span class="ss">url</span><span class="p">:</span> <span class="ss">http</span><span class="p">:</span><span class="sr">//mi</span><span class="n">chaeljcarey</span><span class="o">.</span><span class="n">github</span><span class="o">.</span><span class="n">io</span>
</span><span class='line'><span class="ss">title</span><span class="p">:</span> <span class="no">Michael</span> <span class="n">J</span> <span class="no">Carey</span>
</span><span class='line'><span class="ss">subtitle</span><span class="p">:</span> <span class="no">Programming</span> <span class="n">my</span> <span class="n">life</span> <span class="n">away</span> <span class="ow">and</span> <span class="n">enjoying</span> <span class="n">the</span> <span class="n">ride</span>
</span><span class='line'><span class="ss">author</span><span class="p">:</span> <span class="no">Michael</span> <span class="n">J</span> <span class="no">Carey</span>
</span><span class='line'><span class="ss">simple_search</span><span class="p">:</span> <span class="ss">https</span><span class="p">:</span><span class="sr">//</span><span class="n">www</span><span class="o">.</span><span class="n">google</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="n">search</span>
</span><span class='line'><span class="ss">description</span><span class="p">:</span> <span class="no">Programming</span> <span class="k">for</span> <span class="n">motion</span><span class="p">,</span> <span class="n">control</span> <span class="ow">and</span> <span class="n">robotics</span> <span class="k">in</span> <span class="n">the</span> <span class="n">hobby</span> <span class="ow">and</span> <span class="n">industrial</span> <span class="n">sectors</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Add pages to the paginator (menu bar)</h2>

<p>Lets put an &lsquo;About&rsquo; Item on the menu bar.</p>

<p>In the root directory, create a folder with the name &lsquo;about&rsquo; and then add a index.markdown file.</p>

<p>In the bash shell, add a page and name it about.  It will create a directory off root with that name.  The file /about/index.markdown has also been created.</p>

<figure class='code'><figcaption><span>Create a Page</span><a href='https://michaeljcarey.github.io'>Source Article</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rake</span> <span class="n">new_page</span><span class="o">[</span><span class="n">about</span><span class="o">]</span>
</span><span class='line'><span class="c1"># creates /source/about/index.markdown</span>
</span><span class='line'><span class="n">vi</span> <span class="n">index</span><span class="o">.</span><span class="n">markdown</span>
</span></code></pre></td></tr></table></div></figure>


<p>Edit the index.markdown file.</p>

<figure class='code'><figcaption><span>/about/index.markdown</span><a href='https://michaeljcarey.github.io'>Source Article</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">---</span>
</span><span class='line'><span class="ss">layout</span><span class="p">:</span> <span class="n">page</span>
</span><span class='line'><span class="ss">title</span><span class="p">:</span> <span class="s2">&quot;About Michael J Carey&quot;</span>
</span><span class='line'><span class="ss">comments</span><span class="p">:</span> <span class="kp">true</span>
</span><span class='line'><span class="ss">sharing</span><span class="p">:</span> <span class="kp">true</span>
</span><span class='line'><span class="ss">footer</span><span class="p">:</span> <span class="kp">true</span>
</span><span class='line'><span class="o">---</span>
</span><span class='line'><span class="no">Ice</span> <span class="n">cream</span> <span class="n">is</span> <span class="n">good</span> <span class="k">for</span> <span class="n">you</span> <span class="n">because</span> <span class="n">it</span> <span class="n">makes</span> <span class="n">you</span> <span class="n">happy</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now add the page to the pagenator (menubar).  Edit the navigation.html in /source/_includes/custom</p>

<figure class='code'><figcaption><span>Add Page to the Menu Bar</span><a href='https://michaeljcarey.github.io'>Source Article</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">cd</span> <span class="n">source</span><span class="o">/</span><span class="n">_includes</span><span class="o">/</span><span class="n">custom</span>
</span><span class='line'><span class="n">vi</span> <span class="n">navigation</span><span class="o">.</span><span class="n">html</span>
</span></code></pre></td></tr></table></div></figure>


<p>So that it includes the about group.</p>

<figure class='code'><figcaption><span>navigation.html</span><a href='https://michaeljcarey.github.io'>Source Article</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;ul</span> <span class="na">class=</span><span class="s">&quot;main-navigation&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;li&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;/&quot;</span><span class="nt">&gt;</span>Blog<span class="nt">&lt;/a&gt;&lt;/li&gt;</span>
</span><span class='line'>  <span class="nt">&lt;li&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;/blog/archives&quot;</span><span class="nt">&gt;</span>Archives<span class="nt">&lt;/a&gt;&lt;/li&gt;</span>
</span><span class='line'>  <span class="nt">&lt;li&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;/about&quot;</span><span class="nt">&gt;</span>About<span class="nt">&lt;/a&gt;&lt;/li&gt;</span>
</span><span class='line'><span class="nt">&lt;/ul&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Add a Pages to the Sidebar</h2>

<p>Lets say we wanted to add a page onto the sidebar.  In this example our page is called &lsquo;FruitFav&rsquo; which contain a set of favorite fruits.
Create and edit &lsquo;source/_includes/custom/asides/FruitFav.html&rsquo;</p>

<figure class='code'><figcaption><span>Create and edit 'source/_includes/custom/asides/FruitFav.html'</span><a href='https://michaeljcarey.github.io'>Source Article</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">cd</span> <span class="n">source</span><span class="o">/</span><span class="n">_includes</span><span class="o">/</span><span class="n">custom</span><span class="o">/</span><span class="n">asides</span>
</span><span class='line'><span class="n">vi</span> <span class="no">FruitFav</span><span class="o">.</span><span class="n">html</span>
</span></code></pre></td></tr></table></div></figure>


<p>and the file might look like this:</p>

<figure class='code'><figcaption><span>FruitFav.html</span><a href='https://michaeljcarey.github.io'>Source Article</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;h3&gt;</span>My Favorite Fruit<span class="nt">&lt;/h3&gt;</span>
</span><span class='line'><span class="nt">&lt;p&gt;</span>Lychee<span class="nt">&lt;/p&gt;</span>
</span><span class='line'><span class="nt">&lt;p&gt;</span>Durian<span class="nt">&lt;/p&gt;</span>
</span><span class='line'><span class="nt">&lt;p&gt;</span>Bacon<span class="nt">&lt;/p&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Edit your _config.yml file and find the line with default_asides and add /custom/asides/FruitFav.html</p>

<figure class='code'><figcaption><span>_config.yml</span><a href='https://michaeljcarey.github.io'>Source Article</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">default_asides</span><span class="p-Indicator">:</span> <span class="p-Indicator">[</span><span class="nv">asides/recent_posts.html</span><span class="p-Indicator">,</span> <span class="nv">custom/asides/FruitFav.html</span><span class="p-Indicator">,</span> <span class="nv">asides/github.html</span><span class="p-Indicator">,</span> <span class="nv">...</span><span class="p-Indicator">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>The above example is somewhat static.  What if I want to put my Category List in the sidebar? The categories should be discovered dynamically and they should provide links to all the posts in that category.  For dynamic category action, I followed a path described by
<a href="http://kaworu.github.io/octostrap3/blog/2013/10/03/category-list-aside/">http://kaworu.github.io/octostrap3/blog/2013/10/03/category-list-aside/</a>
but it didnt look good because I needed to install Octostrap3 theme.  When I did that it looked better but it changed too many things for my taste.  I then decided to change back to the classic theme.</p>

<h2>Change a Theme</h2>

<figure class='code'><figcaption><span>To Change Back to the default Classic Theme</span><a href='https://michaeljcarey.github.io'>Source Article</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">rake install[classic]</span>
</span><span class='line'><span class="l-Scalar-Plain">rake generate</span>
</span></code></pre></td></tr></table></div></figure>


<p>After I did this I noticed that my posts dissappeared from the paginator.  After hunting around I found that the property paginate_path in _config.yml was set to &ldquo;blog/posts/:num&rdquo;.  Once I changed to &ldquo;posts/:num&rdquo; I got it back.</p>

<h2>Install a Plugin</h2>

<p>I decided to use the ctdk/octopress-category-list plugin.<br/>
<a href="https://github.com/ctdk/octopress-category-list">https://github.com/ctdk/octopress-category-list</a>
<a href="https://github.com/ctdk/octopress-category-list">https://github.com/ctdk/octopress-category-list</a>
Download the plugin and follow the instructions in the readme file.  Add the plugin into the ./plugins directory and (in this case) copy the template (html) files into ./source/<em>includes/custom/asides directory and then add the template file names into the default_asides list of </em>config.yml file.</p>

<h2>How to get social</h2>

<p>With facebook, linkedin, etc.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Blogging Basics I, How to Create a Post on Your Octopress Blog]]></title>
    <link href="http://michaeljcarey.github.io/blog/2015/08/05/myfirstpost/"/>
    <updated>2015-08-05T13:02:04-07:00</updated>
    <id>http://michaeljcarey.github.io/blog/2015/08/05/myfirstpost</id>
    <content type="html"><![CDATA[<p>Welcome to my first post (or is it a page).  This post is an experimental platform for me to learn how to blog. In addition, I am able to share my experiences with others who may find themselves walking down similar paths.
First off, my blogging platform is powered by Octopress and it is being hosted by the github repository.</p>

<p>This article &ldquo;How to Create a Post on Your Octopress Blog&rdquo; shows how to set up and edit a post.  It also demonstrates how to place certain wigits such as images, video and &lsquo;code blocks&rsquo; onto the post. The follow up article &ldquo;How to Configure and Edit Your Blog Site&rdquo; shows how to change your blog&rsquo;s appearance and add functionality.</p>

<!-- more -->


<h2>Create a Post</h2>

<p>Open a bash shell and type:</p>

<figure class='code'><figcaption><span>Set some environment variables</span><a href='https://michaeljcarey.github.io'>Source Article</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">source</span> <span class="o">~</span><span class="sr">/.bash_profile</span>
</span></code></pre></td></tr></table></div></figure>


<p>Create a new post:
Blog posts are located in source/_posts.
They follow a naming convention as: &lsquo;YYYY-MM-DD-post-title.markdown&rsquo;</p>

<figure class='code'><figcaption><span>Create a New Post</span><a href='https://michaeljcarey.github.io'>Source Article</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rake</span> <span class="n">new_post</span><span class="o">[</span><span class="s2">&quot;title&quot;</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<h2>EDIT THE POST FILE</h2>

<p>Open the post file located in &lsquo;source/_posts&rsquo; with your favorite editor.  I am currently using gedit.
The post file has header information in yaml.  You may edit that information.</p>

<p>Categories are used to classify your post.  Search Engines key off of them.  You can place the categories in the side bar and you can filter your posts by category</p>

<figure class='code'><figcaption><span>Category Syntax</span><a href='https://michaeljcarey.github.io'>Source Article</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#one category</span>
</span><span class='line'><span class="ss">categories</span><span class="p">:</span> <span class="no">Sass</span>
</span><span class='line'><span class="c1">#multiple categories</span>
</span><span class='line'><span class="ss">categories</span><span class="p">:</span> <span class="o">[</span><span class="no">CSS3</span><span class="p">,</span> <span class="no">Sass</span><span class="p">,</span> <span class="no">Media</span> <span class="no">Queries</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Place Text</h2>

<p>I have put some junk text that I thought was a comment at the bottom of this post.  As I learn more, I will put at the top.</p>

<h2>what is &lt;! &ndash;more&ndash;!></h2>

<p>This tag tells the blog site where to stop showing your post.  This way your older posts can show just the beginning paragraph which makes it easier to scroll down and see all of the older posts.</p>

<h2>Place an Image</h2>

<p>This is an example of how to place an image:  (the image of the cat in the code block is not intended. I will find out how to prevent that later.</p>

<figure class='code'><figcaption><span>How to place an image in Octopress</span><a href='http://octopress.org/docs/plugins/image-tag/'>Source Article</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="p">{</span><span class="o">%</span> <span class="n">img</span> <span class="o">[</span><span class="k">class</span> <span class="n">names</span><span class="o">]</span> <span class="sr">/path/</span><span class="n">to</span><span class="o">/</span><span class="n">image</span> <span class="o">[</span><span class="n">width</span><span class="o">]</span> <span class="o">[</span><span class="n">height</span><span class="o">]</span> <span class="o">[</span><span class="n">title</span> <span class="n">text</span> <span class="o">[</span><span class="n">alt</span> <span class="n">text</span><span class="o">]]</span> <span class="sx">%}</span>
</span><span class='line'><span class="sx"><img src="http://placekitten.com/890/280"></span>
</span><span class='line'><span class="p">{</span><span class="o">%</span> <span class="n">img</span> <span class="n">left</span> <span class="ss">http</span><span class="p">:</span><span class="sr">//</span><span class="n">placekitten</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="mi">320</span><span class="o">/</span><span class="mi">250</span> <span class="no">Place</span> <span class="no">Kitten</span> <span class="c1">#2 %}</span>
</span><span class='line'><span class="p">{</span><span class="o">%</span> <span class="n">img</span> <span class="n">right</span> <span class="ss">http</span><span class="p">:</span><span class="sr">//</span><span class="n">placekitten</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="mi">300</span><span class="o">/</span><span class="mi">500</span> <span class="mi">150</span> <span class="mi">250</span> <span class="no">Place</span> <span class="no">Kitten</span> <span class="c1">#3 %}</span>
</span><span class='line'><span class="p">{</span><span class="o">%</span> <span class="n">img</span> <span class="n">right</span> <span class="ss">http</span><span class="p">:</span><span class="sr">//</span><span class="n">placekitten</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="mi">300</span><span class="o">/</span><span class="mi">500</span> <span class="mi">150</span> <span class="mi">250</span> <span class="s1">&#39;Place Kitten #4&#39;</span> <span class="s1">&#39;An image of a very cute kitten&#39;</span> <span class="o">%</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Resulting in:</p>

<p><img src="http://placekitten.com/890/280">
<img class="left" src="http://placekitten.com/320/250" title="Place Kitten #2" >
<img class="right" src="http://placekitten.com/300/500" width="150" height="250" title="Place Kitten #3" >
<img class="right" src="http://placekitten.com/300/500" width="150" height="250" title="Place Kitten #4" alt="An image of a very cute kitten">
I am having trouble placing all these cats around.  I will learn how to heard these things as soon as I catch my breath.</p>

<p>If I want to link to an image from facebook, I have to right click on the image and copy image location.  Then I can paste that link into my img tag.</p>

<h2>Place a Video</h2>

<p>If you want to place a video, its like so;</p>

<figure class='code'><figcaption><span>Syntax for placing a video</span><a href='https://michaeljcarey.github.io'>Source Article</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="p">{</span><span class="o">%</span> <span class="n">video</span> <span class="ss">http</span><span class="p">:</span><span class="sr">//s</span><span class="mi">3</span><span class="o">.</span><span class="n">imathis</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="n">video</span><span class="o">/</span><span class="n">zero</span><span class="o">-</span><span class="n">to</span><span class="o">-</span><span class="n">fancy</span><span class="o">-</span><span class="n">buttons</span><span class="o">.</span><span class="n">mp4</span> <span class="mi">640</span> <span class="mi">320</span> <span class="ss">http</span><span class="p">:</span><span class="sr">//s</span><span class="mi">3</span><span class="o">.</span><span class="n">imathis</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="n">video</span><span class="o">/</span><span class="n">zero</span><span class="o">-</span><span class="n">to</span><span class="o">-</span><span class="n">fancy</span><span class="o">-</span><span class="n">buttons</span><span class="o">.</span><span class="n">png</span> <span class="o">%</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>And here is how it looks.
<video width='640' height='320' preload='metadata' controls poster='http://s3.imathis.com/video/zero-to-fancy-buttons.png'><source src='http://s3.imathis.com/video/zero-to-fancy-buttons.mp4' type='video/mp4; codecs="avc1.42E01E, mp4a.40.2"'></video></p>

<h2>Place Code Blocks (text boxes)</h2>

<p>The text box below is essential to displaying code snippets.  This box is pretty powerful due to it syntax highlighting.  Thanks to Avinish Meetoo for the codesnip.</p>

<figure class='code'><figcaption><span>Discover if a number is prime</span><a href='http://www.noulakaz.net/weblog/2007/03/18/a-regular-expression-to-check-for-prime-numbers/'>Source Article</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Fixnum</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">prime?</span>
</span><span class='line'>    <span class="p">(</span><span class="s1">&#39;1&#39;</span> <span class="o">*</span> <span class="nb">self</span><span class="p">)</span> <span class="o">!~</span> <span class="sr">/^1?$|^(11+?)\1+$/</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>The box is coded as such:</p>

<figure class='code'><figcaption><span>Easy Code Block Syntax</span><a href='https://michaeljcarey.github.io'>Source Article</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#``` [language] [title] [url] [link text]</span>
</span><span class='line'><span class="c1">#class Fixnum</span>
</span><span class='line'><span class="c1">#  def prime?</span>
</span><span class='line'><span class="c1">#    (&#39;1&#39; * self) !~ /^1?$|^(11+?)\1+$/</span>
</span><span class='line'><span class="c1">#  end</span>
</span><span class='line'><span class="c1">#end</span>
</span><span class='line'><span class="c1">#```</span>
</span></code></pre></td></tr></table></div></figure>


<p>You can include your own local snippets this way:
File /home/mcarey/octopress/source/downloads/code/path/to/file could not be found .
Hmmm, too much trouble at the moment.  I am imagining that I would have to put my source under github.  For now, what could be simpler than inlining the snippet as in the bottom example.</p>

<p>Another slick way to embed code snippets is with Gist.  In this case we get a vdif file gistfile1.diff from the host GitHub.</p>

<div><script src='https://gist.github.com/4321346.js?file=gistfile1.diff'></script>
<noscript><pre><code>@@ -590,7 +590,7 @@ class SpritesTest &lt; Test::Unit::TestCase
  it &quot;should generate a sprite from nested folders&quot; do
    css = render &lt;&lt;-SCSS
-     @import &quot;nested/*.png&quot;;
+     @import &quot;nested/**/*.png&quot;;
      @include all-nested-sprites;
    SCSS
    assert_correct css, &lt;&lt;-CSS</code></pre></noscript></div>


<h2>Launch your Blog Locally or Globally</h2>

<p>Open a bash shell and type:</p>

<figure class='code'><figcaption><span>Set some environment variables</span><a href='https://michaeljcarey.github.io'>Source Article</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">source</span> <span class="o">~</span><span class="sr">/.bash_profile</span>
</span></code></pre></td></tr></table></div></figure>


<p>To see your output blog, use these commands:
 * &lsquo;generate&rsquo; will generate your blog from source jekyll to html.<br/>
 * &lsquo;deploy&rsquo; will copy the generated files into the _deploy/ folder, then add them to git, commit and push them to the master branch.
 * &lsquo;preview&rsquo; will generate and launch a local web server at at &lsquo;<a href="http://localhost:4000/">http://localhost:4000/</a>&rsquo;</p>

<figure class='code'><figcaption><span>generate launch and preview commands</span><a href='https://michaeljcarey.github.io'>Source Article</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rake</span> <span class="n">generate</span>
</span><span class='line'><span class="n">rake</span> <span class="n">deploy</span>
</span><span class='line'><span class="n">rake</span> <span class="n">preview</span>
</span></code></pre></td></tr></table></div></figure>


<p>To commit your source code into github, do the following.</p>

<figure class='code'><figcaption><span>Commit your source code</span><a href='https://michaeljcarey.github.io'>Source Article</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">git</span> <span class="n">add</span> <span class="o">.</span>
</span><span class='line'><span class="n">git</span> <span class="n">commit</span> <span class="o">-</span><span class="n">m</span> <span class="s1">&#39;your message&#39;</span>
</span><span class='line'><span class="n">git</span> <span class="n">push</span> <span class="n">origin</span> <span class="n">source</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
</feed>
