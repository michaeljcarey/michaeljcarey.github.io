<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: arduino | Michael's Software Blog]]></title>
  <link href="http://michaeljcarey.github.io/blog/categories/arduino/atom.xml" rel="self"/>
  <link href="http://michaeljcarey.github.io/"/>
  <updated>2015-09-10T14:55:58-07:00</updated>
  <id>http://michaeljcarey.github.io/</id>
  <author>
    <name><![CDATA[Michael J Carey]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Make an RFduino Servo Controller]]></title>
    <link href="http://michaeljcarey.github.io/blog/2015/08/14/rfduinoServo/"/>
    <updated>2015-08-14T13:36:02-07:00</updated>
    <id>http://michaeljcarey.github.io/blog/2015/08/14/rfduinoServo</id>
    <content type="html"><![CDATA[<p>An RFduino is a tiny fingertip sized Arduino that features wireless Bluetooth.  An assortment of tiny stackable shields are made available so that you can make a number of cool projects. To learn how to set up an RFduino, see <a href="http://michaeljcarey.github.io/blog/2015/08/13/rfduinosetup/">Setup Your First RFduino</a>.</p>

<p>I have been wanting to make a simple servo controller project lately and I thought that this little package is the coolest thing because it is tiny, wireless and I can power it with a USB power pack which makes it completely self contained and it will be controlled wirelessly using an Iphone.</p>

<!-- more -->


<h3>What You Need</h3>

<p>This little project requires the basic wireless RFduino plus their USB and servo shields. The USB shield not only provides the most convenient way to apply power, but also provides a way to download sketches (programs) into the controller.  The Servo shield can control up to four servos.</p>

<p><a href="http://www.rfduino.com/product/rfd22102-rfduino-dip/index.html"><img src="http://www.rfduino.com/wp-content/uploads/2014/03/RFD22102.Prospective.Top_.png" width="250" height="250" title="RFduino RFD22102" ></a>
<a href="http://www.rfduino.com/product/rfd22121-usb-shield-for-rfduino/index.html"><img src="http://www.rfduino.com/wp-content/uploads/2014/03/RFD22121.Prospective.Top_.png" width="250" height="250" title="RFduino RFD22121" ></a>
<a href="http://www.rfduino.com/product/rfd22123-servo-shield-for-rfduino/index.html"><img src="http://www.rfduino.com/wp-content/uploads/2014/03/RFD22123.Prospective.Top_.png" width="250" height="250" title="RFduino RFD22102" ></a></p>

<p>I also need some servos to drive and I found a neat little <a href="https://www.adafruit.com/products/1967">Mini Pan-Tilt Kit</a> for under $20 from Adafruit.  You can use any servos that you wish in your project.  To power it all, I decided to use a USB Power Bank as a battery. I happened to find one that suits my need in Lumsing. I wanted to keep my cabling simple and off the shelf so I got a usb to barrel jack cable, and a <a href"http://www.adafruit.com/products/368>Female DC Power Adapter</a> which I also picked up from Adafruit.</p>

<p><img src="/images/custom/rfduino/rfDuServoParts25.jpg" title="Parts for my RFduino Servo System" ></p>

<h3>Program the RFduino</h3>

<p>Connect the RFduino and USB shield together and plug into your computer.
<img src="/images/custom/rfduino/rfDuSetup25.jpg" title="Programming the RFduino" >
Open the Arduino IDE.  Follow the <a href="">RFduino Setup</a> post if you don&rsquo;t know how to do this.  Open the sketch from File/Examples/RFduinoBLE/Servo in the IDE.
Which basically looks like this:
<figure class='code'><figcaption><span>RFduino Servo Sketch <a href="https://michaeljcarey.github.io">https://michaeljcarey.github.io</a> Source Article</p></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="kp">include</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="no">Servo</span><span class="o">.</span><span class="n">h</span><span class="o">&gt;&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;include &amp;lt;RFduinoBLE.h&gt;&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="no">Servo</span> <span class="n">s1</span><span class="p">;</span>
</span><span class='line'><span class="no">Servo</span> <span class="n">s2</span><span class="p">;</span>
</span><span class='line'><span class="no">Servo</span> <span class="n">s3</span><span class="p">;</span>
</span><span class='line'><span class="no">Servo</span> <span class="n">s4</span><span class="p">;</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;void setup() {</span>
</span><span class='line'><span class="sr">  s1.attach(2);</span>
</span><span class='line'><span class="sr">  s2.attach(3);</span>
</span><span class='line'><span class="sr">  s3.attach(4);</span>
</span><span class='line'><span class="sr">  s4.attach(5);</span>
</span><span class='line'><span class="sr">  RFduinoBLE.advertisementInterval = 675;</span>
</span><span class='line'><span class="sr">  RFduinoBLE.advertisementData = &amp;ldquo;-servo&amp;rdquo;;</span>
</span><span class='line'><span class="sr">  RFduinoBLE.begin();</span>
</span><span class='line'><span class="sr">}&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="n">void</span> <span class="kp">loop</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="sr">//</span> <span class="no">RFduino_ULPDelay</span><span class="p">(</span><span class="no">INFINITE</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;void RFduinoBLE_onReceive(char *data, int len){</span>
</span><span class='line'><span class="sr">  int servo = data[0];</span>
</span><span class='line'><span class="sr">  int degree = data[1];&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="k">if</span> <span class="p">(</span><span class="n">bitRead</span><span class="p">(</span><span class="n">servo</span><span class="p">,</span> <span class="mi">1</span><span class="p">))</span>
</span><span class='line'>    <span class="n">s1</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">degree</span><span class="p">);</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="n">bitRead</span><span class="p">(</span><span class="n">servo</span><span class="p">,</span> <span class="mi">2</span><span class="p">))</span>
</span><span class='line'>    <span class="n">s2</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">degree</span><span class="p">);</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="n">bitRead</span><span class="p">(</span><span class="n">servo</span><span class="p">,</span> <span class="mi">3</span><span class="p">))</span>
</span><span class='line'>    <span class="n">s3</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">degree</span><span class="p">);</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="n">bitRead</span><span class="p">(</span><span class="n">servo</span><span class="p">,</span> <span class="mi">4</span><span class="p">))</span>
</span><span class='line'>    <span class="n">s4</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">degree</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>
And download the the servo sketch into the Arduino.</p>

<h3>Some Assembly Required</h3>

<p>Strip two small pieces of wire and connect the +v(s) and gnds on the terminal blocks of the servo shield to the ones on the DC Power Adapter.</p>

<p><img src="/images/custom/rfduino/rfDuServoConn25.jpg" title="The Servo Shield and DC Connector" ></p>

<p>Connect the Servo Wires to the RFduino Servo Shield and then connect the Servo Shield to the RFduino.</p>

<ul>
<li> Brown is Gnd</li>
<li> Red is +5v</li>
<li> Orange is Signal</li>
</ul>


<p><img src="/images/custom/rfduino/rfDuAssy25.jpg" title="Connect the Servos" ></p>

<h3>Connect Power</h3>

<p>Plug both the RFduino and Servo Shield power to the Power Bank.</p>

<p><img src="/images/custom/rfduino/rfDuServoComp25.jpg" title="Connections for My RFduino Servo System" ></p>

<h3>Get the Iphone App</h3>

<p>Go to the App Store on your Iphone and search for RFduino.
Find the Servo app and install it.
Once installed, turn on the Power Bank, then open the Iphone Servo App. The app should discover the RFduino and display it in the app. Click on the found RFduino and it should open a control panel.</p>

<p><img src="/images/custom/rfduino/rfDuFound2.png" width="350" title="System" >
<img src="/images/custom/rfduino/rfDuServoApp.png" width="350" title="System" ></p>

<p>You should be able to select servo channels and then move the slider and your new Servo System should respond.</p>

<p>My servo system is acting a little sick as you can see from the YouTube video.  What is going on?</p>

<p>
<div class="ratio-4-3 embed-video-container" onclick="var myAnchor = document.getElementById('Z4ERE7K_RbI');var tmpDiv = document.createElement('div');tmpDiv.innerHTML = '&lt;iframe style=&quot;vertical-align:top;width:100%;height:100%;position:absolute;&quot; src=&quot;http://www.youtube.com/embed/Z4ERE7K_RbI?autoplay=1&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;';myAnchor.parentNode.replaceChild(tmpDiv.firstChild, myAnchor);return false;" title="click here to play">
<a class="youtube-lazy-link" style="width:100%;height:100%;background:#000 url(http://i2.ytimg.com/vi/Z4ERE7K_RbI/0.jpg) center center no-repeat;background-size:contain;position:absolute" href="http://www.youtube.com/watch?v=Z4ERE7K_RbI" id="Z4ERE7K_RbI" onclick="return false;">
<div class="youtube-lazy-link-div"></div>
<div class="youtube-lazy-link-info">RFduino Servo System is Spastic</div>
</a>
<div class="video-info" >An RFduino Servo System acting a little spastic.
https://michaeljcarey.github.io</div>
</div>

</p>

<p><br/>
Ok, after a bit of digging around, I discovered that although the RFduino BLE and the Servo shield both work well by themselves, they do not work well together.  You see, PWM waveforms are generated by two counters.  One for pulse width and the other for pulse frequency.  In this implementation, the counters used are not actually on the servo shield but internal to the RFduino itself.  You can see from the RFduino Servo Shield Schematic that there are no counters or PWM generator but only a quad amplifier.</p>

<iframe src="http://docs.google.com/gview?url=http://www.rfduino.com/wp-content/uploads/2014/03/rfd22123_r403_b001_sch.pdf&embedded=true" 
style="width:800px; height:550px;" frameborder="0"></iframe>


<p>When the BLE is used, the interrupts somehow corrupt the counters intended for the PWM signal which causes a great deal of unacceptable jitter.  This is something the RFduino folks should fix, but in lieu of that happening, the best solution is to get a third party servo shield with its own PWM generator i.e. its own counters.  In that way, the controller would only need to write two registers (width, period) per servo.  Adafruit provides such a board which I have and will soon implement, but its out of scope for this post.</p>

<p>*Note:  Another possible solution is to use the RFduino and servo shield without the BLE, but then I would lose my wireless capability, which is my sole reason for using the RFduino.</p>

<h3>Conclusion</h3>

<p>This post shows you how to connect an Iphone to and RFduino and servo shield.  I love how this project is so self contained.  You can easily imagine how the parts can easily fit into a robotic system which is not tethered to any stationary devices for power or control.  Although this project proved to be flawed, if an improved servo shield was used, the project would be quite successful.  Maybe I will do this and update this writeup in the future, but for now&hellip;
On to my next robot project.</p>

<p>Do cool things.</p>

<p><meta itemprop="name" content="Make an RFduino Servo Controller" />
<meta itemprop="image" content="https://michaeljcarey.github.io/images/custom/rfduino/rfDuSetup25.jpg" />
<meta itemprop="description" content="I have been wanting to make a simple servo controller project lately and I thought that this little package is the coolest thing." /></p>

<p><meta name="description" content="I have been wanting to make a simple servo controller project lately and I thought that this little package is the coolest thing" />
<meta name="author" content="Michael J Carey" /></p>

<!-- 
<meta property="article:author" content="[ GOOGLE+ AUTHOR URL ]" />

-->


<p><meta property="article:published_time" content="2015-08-14 13:36:02 -0700" />
<meta property="article:section" content="Arduino" /></p>

<p><meta property="og:title" content="Make an RFduino Servo Controller" />
<meta property="og:type" content="article" />
<meta property="og:description" content="I have been wanting to make a simple servo controller project lately and I thought that this little package is the coolest thing" />
<meta property="og:image" content="https://michaeljcarey.github.io/images/custom/rfduino/rfDuSetup25.jpg" />
<meta property="og:url" content="https://michaeljcarey.github.io/blog/2015/08/14/rfduinoServo/" />
<meta property="og:site_name" content="michaeljcarey.github.io" /></p>

<p><meta name="twitter:card" content="summary">
<meta name="twitter:title" content="Make an RFduino Servo Controller">
<meta name="twitter:description" content="I have been wanting to make a simple servo controller project lately and I thought that this little package is the coolest thing">
<meta name="twitter:image" content="https://michaeljcarey.github.io/images/custom/rfduino/rfDuSetup25.jpg">
<meta name="twitter:url" content="https://michaeljcarey.github.io/blog/2015/08/14/rfduinoServo/"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setup Your first RFduino]]></title>
    <link href="http://michaeljcarey.github.io/blog/2015/08/13/rfduinosetup/"/>
    <updated>2015-08-13T13:36:02-07:00</updated>
    <id>http://michaeljcarey.github.io/blog/2015/08/13/rfduinosetup</id>
    <content type="html"><![CDATA[<p>An RFduino is a tiny fingertip sized Arduino that features wireless Bluetooth.  They also make available a small assortment of tiny stackable shields including USB, battery, buttons, relays and servo shields so that you can make a number of cool projects.  The website provides documentation and apps for demonstration, but I thought I could show you how I set up my projects in one concise document.</p>

<!-- more -->


<p>For starters, I purchased the standard RFduino RFD22102 with wireless Bluetooth . But in order to download any sketches into this Arduino, I also needed the RFD22121 USB Shield.  This shield is also an easy way to provide power to the RFduino as I can power everything through a USB charger or power pack.</p>

<p><a href="http://www.rfduino.com/product/rfd22102-rfduino-dip/index.html"><img src="http://www.rfduino.com/wp-content/uploads/2014/03/RFD22102.Prospective.Top_.png" width="350" height="350" title="RFduino RFD22102" ></a>
<a href="http://www.rfduino.com/product/rfd22121-usb-shield-for-rfduino/index.html"><img src="http://www.rfduino.com/wp-content/uploads/2014/03/RFD22121.Prospective.Top_.png" width="350" height="350" title="RFduino RFD22121" ></a></p>

<p>For my development system, I ventured over to the <a href="https://www.arduino.cc/">Arduino site</a> and downloaded the <a href="https://www.arduino.cc/en/Main/Software">IDE</a>.  In my case, I am using Ubuntu but they have IDE&rsquo;s for Windows and OS X.  I simply followed the instructions for Ubuntu which was basically;
<code>ruby from Linux console https://michaeljcarey.github.io Source Article
sudo apt-get update &amp;&amp; sudo apt-get install arduino arduino-core
</code></p>

<p>In my case, it is installed in /opt/arduino-1.6.3/ folder but I linked the Arduino binary to my desktop.  Because it is a binary executable that I click from my desktop, I must tell my OS that I wish to run and not edit or view it.  I can do this by right clicking on the Arduino icon and selecting properties.  Under the permissions tab, I selected the check box for &lsquo;Allow executing file as program&rsquo;.</p>

<p><img src="/images/custom/rfduino/ardProp.png" width="550" height="450" title="Enable Executable to Run" ></p>

<p>The Arduino software does not natively recognize the RFduino so there are some steps to download the RFduino code.  The RFduino site documents the <a href="https://github.com/RFduino/RFduino/blob/master/README.md">installation procedure</a> so after you install the Arduino software, go to File/Preferences and add <a href="http://rfduino.com/package_rfduino_index.json">http://rfduino.com/package_rfduino_index.json</a> to Additional Board Manager URLs and save.</p>

<p>Now open Tools/Board/Board Manager, and select RFduino at the end of the list and click install.
After that, select the RFduino will will now appear in the Tools/Board menu
Now go to Tools/Port and configure that.  On my Linux machine, it appears as: /dev/ttyUSB0.</p>

<p>You may also need a <a href="http://www.ftdichip.com/Drivers/VCP.htm">Virtual COM Port Driver</a>.</p>

<p>Finally, for Linux, enter:
<code>ruby from Linux console https://michaeljcarey.github.io Source Article
sudo apt-get install default-jre.
</code></p>

<p>With that installed, connect the USB shield to the RFduino and insert it into the computer.
<img src="/images/custom/rfduino/rfDuSetup25.jpg" title="Downloading to RFduino" ></p>

<p>Navigate to File/Examples/RFduinoBLE and select the Temperature example sketch.  Then File/Upload to compile, upload and begin execution.</p>

<p>From an Iphone, go to the Apple App Store and search for RFduino Temperature and install it.</p>

<p>Now open the Iphone Temperature app and it should automatically find the RFduino.  Click on the RFduino Text and the temperature should be displayed.</p>

<p><img class="left" src="/images/custom/rfduino/rfDuFound.png" width="350" height="350" title="RFduino Devices Fount" >
<img class="right" src="/images/custom/rfduino/rfDuTemp.png" width="350" height="350" title="RFduino Temperature Screen" ></p>

<h3>Summary</h3>

<p>This is just the simplest project.  Now that you have seen the basics of programming with the Arduino IDE and RFduino, go out and create all kinds of interesting projects.  Do cool things.</p>

<p><meta itemprop="name" content="Setup Your first RFduino" />
<meta itemprop="image" content="https://michaeljcarey.github.io/images/custom/rfduino/rfDuSetup25.jpg" />
<meta itemprop="description" content="An RFDuino is a tiny fingertip sized Arduino that features wireless bluetooth.  Learn how to create your first project with this device." /></p>

<p><meta name="description" content="An RFDuino is a tiny fingertip sized Arduino that features wireless bluetooth.  Learn how to create your first project with this device." />
<meta name="author" content="Michael J Carey" /></p>

<!-- 
<meta property="article:author" content="[ GOOGLE+ AUTHOR URL ]" />
-->


<p><meta property="article:published_time" content="2015-08-14 13:36:02 -0700" />
<meta property="article:section" content="Arduino" /></p>

<p><meta property="og:title" content="Setup Your first RFduino" />
<meta property="og:type" content="article" />
<meta property="og:description" content="An RFDuino is a tiny fingertip sized Arduino that features wireless bluetooth.  Learn how to create your first project with this device." />
<meta property="og:image" content="https://michaeljcarey.github.io/images/custom/rfduino/rfDuSetup25.jpg" />
<meta property="og:url" content="https://michaeljcarey.github.io/blog/2015/08/14/rfduinoServo/" />
<meta property="og:site_name" content="michaeljcarey.github.io" /></p>

<p><meta name="twitter:card" content="summary">
<meta name="twitter:title" content="Setup Your first RFduino">
<meta name="twitter:description" content="An RFDuino is a tiny fingertip sized Arduino that features wireless bluetooth.  Learn how to create your first project with this device.">
<meta name="twitter:image" content="https://michaeljcarey.github.io/images/custom/rfduino/rfDuSetup25.jpg">
<meta name="twitter:url" content="https://michaeljcarey.github.io/blog/2015/08/14/rfduinoServo/"></p>
]]></content>
  </entry>
  
</feed>
