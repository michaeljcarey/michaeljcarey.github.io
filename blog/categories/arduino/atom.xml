<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Arduino | Michael J Carey]]></title>
  <link href="http://michaeljcarey.github.io/blog/categories/arduino/atom.xml" rel="self"/>
  <link href="http://michaeljcarey.github.io/"/>
  <updated>2015-08-17T17:42:37-07:00</updated>
  <id>http://michaeljcarey.github.io/</id>
  <author>
    <name><![CDATA[Michael J Carey]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Make An R Fduino Servo Controller]]></title>
    <link href="http://michaeljcarey.github.io/blog/2015/08/14/rfduinoServo/"/>
    <updated>2015-08-14T13:36:02-07:00</updated>
    <id>http://michaeljcarey.github.io/blog/2015/08/14/rfduinoServo</id>
    <content type="html"><![CDATA[<p>RFDuino is a tiny fingertip sized Arduino that features wireless bluetooth.  They also make available an assortment of tiny stackable shields so that you can make any number of cool projects.</p>

<p>I have been wanting to make a simple servo controller project lately and I thought that this little package is the coolest thing.  Its tiny, its wireless and I can power it with a usb power pack.  This little project requires the basic wireless rfduino and two shields; a USB shield which not only provides the most convienient way to apply power, but also provides a way to download sketches (programs) into the controller, and a Servo shield which can control up to four servos.</p>

<p>decided that I would make a simple servo controller project, so I purchased 3 boards from them so that I can develop a servo controller.  This post describes initial setup of my project.  Another post will describe how I made a remotely controlled robot.</p>

<p>I got the
I also got the</p>

<p>And finally, I got the RFD22123 Servo Shield for RFduino so that I can build my future robot.</p>

<p><a href="http://www.rfduino.com/product/rfd22123-servo-shield-for-rfduino/index.html"><img src="http://www.rfduino.com/wp-content/uploads/2014/03/RFD22123.Prospective.Top_.png" width="250" height="250" title="RFduino RFD22102" ></a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setup Your First R Fduino]]></title>
    <link href="http://michaeljcarey.github.io/blog/2015/08/13/rfduinosetup/"/>
    <updated>2015-08-13T13:36:02-07:00</updated>
    <id>http://michaeljcarey.github.io/blog/2015/08/13/rfduinosetup</id>
    <content type="html"><![CDATA[<p>RFDuino is a tiny fingertip sized Arduino that features wireless bluetooth.  They also make available a small assortment of tiny stackable shields including USB, battery, buttons, relays and servo shields so that you can make a number of cool projects.  The website provides documentation and apps for demonstration, but I thought I could show you how I set up my projects in one concise document.</p>

<p>For starters, I purchased the standard RFduino RFD22102 with wireless bluetooth.</p>

<p><a href="http://www.rfduino.com/product/rfd22102-rfduino-dip/index.html"><img src="http://www.rfduino.com/wp-content/uploads/2014/03/RFD22102.Prospective.Top_.png" width="250" height="250" title="RFduino RFD22102" ></a></p>

<p>But in order to download any sketches into this arduino, I also needed the RFD22121 USB Shield.  This shield is also an easy way to provide power to the rfduino as I can power everything through a USB charger or power pack.</p>

<p><a href="http://www.rfduino.com/product/rfd22121-usb-shield-for-rfduino/index.html"><img src="http://www.rfduino.com/wp-content/uploads/2014/03/RFD22121.Prospective.Top_.png" width="250" height="250" title="RFduino RFD22121" ></a></p>

<p>For my development system, I ventured over to the <a href="https://www.arduino.cc/">Arduino site</a> and downloaded the <a href="https://www.arduino.cc/en/Main/Software">IDE</a>.  In my case, I am using Ubuntu but they have IDE&rsquo;s for Windows and OS X.  I simply followed the instructions for Ubuntu which was basically;
<code>ruby from Linux console https://michaeljcarey.github.io Source Article
sudo apt-get update &amp;&amp; sudo apt-get install arduino arduino-core
</code></p>

<p>In my case, it is installed in /opt/arduino-1.6.3/ folder but I linked the arduino binary to my desktop.  Because it is a binary executable that I click from my desktop, I must tell my OS that I wish to run and not edit or view it.  I can do this by right clicking on the arduino icon and selecting properties.  Under the permissions tab, I selected the check box for &lsquo;Allow executing file as program&rsquo;.</p>

<p><img src="./images/custom/ardProp.png" width="250" height="250" title="Enable Executable to Run" ></p>

<p>Next I connect my USB shield to the RFDuino and insert it into my computer.  The arduino software does not natively recognize the RFduino so there are some steps to download the RFduino code.  The RFduino site documents the installation procedure.</p>

<p>For now I will focus on the RFduino and the USB shield for prototyping.  Firstly, I will follow the examples from the RFduino web site and document my progress here.  This example is to load a temperature read program into the RFduino.  Then I will download the RFduino Temp app onto my IPhone.</p>

<p>click on products/rfd22102
scroll down to pdf documents and select RFduino Quickstart guide.
The quickstart guide does not say anything about installing on linux.
Go to <a href="https://www.arduino.cc/en/Main/Software">https://www.arduino.cc/en/Main/Software</a> i am running 1.6.3.  the ide is at 1.6.5,
I downloaded and installed onto my linux machine.</p>
]]></content>
  </entry>
  
</feed>
